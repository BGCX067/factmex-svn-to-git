package mx.com.factmex.app.server.sqlmaps.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CCompaniaExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table C_COMPANIA
	 * @ibatorgenerated  Tue Oct 19 12:54:15 CDT 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table C_COMPANIA
	 * @ibatorgenerated  Tue Oct 19 12:54:15 CDT 2010
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table C_COMPANIA
	 * @ibatorgenerated  Tue Oct 19 12:54:15 CDT 2010
	 */
	public CCompaniaExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table C_COMPANIA
	 * @ibatorgenerated  Tue Oct 19 12:54:15 CDT 2010
	 */
	protected CCompaniaExample(CCompaniaExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table C_COMPANIA
	 * @ibatorgenerated  Tue Oct 19 12:54:15 CDT 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table C_COMPANIA
	 * @ibatorgenerated  Tue Oct 19 12:54:15 CDT 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table C_COMPANIA
	 * @ibatorgenerated  Tue Oct 19 12:54:15 CDT 2010
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table C_COMPANIA
	 * @ibatorgenerated  Tue Oct 19 12:54:15 CDT 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table C_COMPANIA
	 * @ibatorgenerated  Tue Oct 19 12:54:15 CDT 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table C_COMPANIA
	 * @ibatorgenerated  Tue Oct 19 12:54:15 CDT 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table C_COMPANIA
	 * @ibatorgenerated  Tue Oct 19 12:54:15 CDT 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table C_COMPANIA
	 * @ibatorgenerated  Tue Oct 19 12:54:15 CDT 2010
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdCompaniaIsNull() {
			addCriterion("ID_COMPANIA is null");
			return this;
		}

		public Criteria andIdCompaniaIsNotNull() {
			addCriterion("ID_COMPANIA is not null");
			return this;
		}

		public Criteria andIdCompaniaEqualTo(String value) {
			addCriterion("ID_COMPANIA =", value, "idCompania");
			return this;
		}

		public Criteria andIdCompaniaNotEqualTo(String value) {
			addCriterion("ID_COMPANIA <>", value, "idCompania");
			return this;
		}

		public Criteria andIdCompaniaGreaterThan(String value) {
			addCriterion("ID_COMPANIA >", value, "idCompania");
			return this;
		}

		public Criteria andIdCompaniaGreaterThanOrEqualTo(String value) {
			addCriterion("ID_COMPANIA >=", value, "idCompania");
			return this;
		}

		public Criteria andIdCompaniaLessThan(String value) {
			addCriterion("ID_COMPANIA <", value, "idCompania");
			return this;
		}

		public Criteria andIdCompaniaLessThanOrEqualTo(String value) {
			addCriterion("ID_COMPANIA <=", value, "idCompania");
			return this;
		}

		public Criteria andIdCompaniaLike(String value) {
			addCriterion("ID_COMPANIA like", value, "idCompania");
			return this;
		}

		public Criteria andIdCompaniaNotLike(String value) {
			addCriterion("ID_COMPANIA not like", value, "idCompania");
			return this;
		}

		public Criteria andIdCompaniaIn(List values) {
			addCriterion("ID_COMPANIA in", values, "idCompania");
			return this;
		}

		public Criteria andIdCompaniaNotIn(List values) {
			addCriterion("ID_COMPANIA not in", values, "idCompania");
			return this;
		}

		public Criteria andIdCompaniaBetween(String value1, String value2) {
			addCriterion("ID_COMPANIA between", value1, value2, "idCompania");
			return this;
		}

		public Criteria andIdCompaniaNotBetween(String value1, String value2) {
			addCriterion("ID_COMPANIA not between", value1, value2,
					"idCompania");
			return this;
		}

		public Criteria andFechaAltaIsNull() {
			addCriterion("FECHA_ALTA is null");
			return this;
		}

		public Criteria andFechaAltaIsNotNull() {
			addCriterion("FECHA_ALTA is not null");
			return this;
		}

		public Criteria andFechaAltaEqualTo(String value) {
			addCriterion("FECHA_ALTA =", value, "fechaAlta");
			return this;
		}

		public Criteria andFechaAltaNotEqualTo(String value) {
			addCriterion("FECHA_ALTA <>", value, "fechaAlta");
			return this;
		}

		public Criteria andFechaAltaGreaterThan(String value) {
			addCriterion("FECHA_ALTA >", value, "fechaAlta");
			return this;
		}

		public Criteria andFechaAltaGreaterThanOrEqualTo(String value) {
			addCriterion("FECHA_ALTA >=", value, "fechaAlta");
			return this;
		}

		public Criteria andFechaAltaLessThan(String value) {
			addCriterion("FECHA_ALTA <", value, "fechaAlta");
			return this;
		}

		public Criteria andFechaAltaLessThanOrEqualTo(String value) {
			addCriterion("FECHA_ALTA <=", value, "fechaAlta");
			return this;
		}

		public Criteria andFechaAltaLike(String value) {
			addCriterion("FECHA_ALTA like", value, "fechaAlta");
			return this;
		}

		public Criteria andFechaAltaNotLike(String value) {
			addCriterion("FECHA_ALTA not like", value, "fechaAlta");
			return this;
		}

		public Criteria andFechaAltaIn(List values) {
			addCriterion("FECHA_ALTA in", values, "fechaAlta");
			return this;
		}

		public Criteria andFechaAltaNotIn(List values) {
			addCriterion("FECHA_ALTA not in", values, "fechaAlta");
			return this;
		}

		public Criteria andFechaAltaBetween(String value1, String value2) {
			addCriterion("FECHA_ALTA between", value1, value2, "fechaAlta");
			return this;
		}

		public Criteria andFechaAltaNotBetween(String value1, String value2) {
			addCriterion("FECHA_ALTA not between", value1, value2, "fechaAlta");
			return this;
		}

		public Criteria andNombreIsNull() {
			addCriterion("NOMBRE is null");
			return this;
		}

		public Criteria andNombreIsNotNull() {
			addCriterion("NOMBRE is not null");
			return this;
		}

		public Criteria andNombreEqualTo(String value) {
			addCriterion("NOMBRE =", value, "nombre");
			return this;
		}

		public Criteria andNombreNotEqualTo(String value) {
			addCriterion("NOMBRE <>", value, "nombre");
			return this;
		}

		public Criteria andNombreGreaterThan(String value) {
			addCriterion("NOMBRE >", value, "nombre");
			return this;
		}

		public Criteria andNombreGreaterThanOrEqualTo(String value) {
			addCriterion("NOMBRE >=", value, "nombre");
			return this;
		}

		public Criteria andNombreLessThan(String value) {
			addCriterion("NOMBRE <", value, "nombre");
			return this;
		}

		public Criteria andNombreLessThanOrEqualTo(String value) {
			addCriterion("NOMBRE <=", value, "nombre");
			return this;
		}

		public Criteria andNombreLike(String value) {
			addCriterion("NOMBRE like", value, "nombre");
			return this;
		}

		public Criteria andNombreNotLike(String value) {
			addCriterion("NOMBRE not like", value, "nombre");
			return this;
		}

		public Criteria andNombreIn(List values) {
			addCriterion("NOMBRE in", values, "nombre");
			return this;
		}

		public Criteria andNombreNotIn(List values) {
			addCriterion("NOMBRE not in", values, "nombre");
			return this;
		}

		public Criteria andNombreBetween(String value1, String value2) {
			addCriterion("NOMBRE between", value1, value2, "nombre");
			return this;
		}

		public Criteria andNombreNotBetween(String value1, String value2) {
			addCriterion("NOMBRE not between", value1, value2, "nombre");
			return this;
		}
	}
}